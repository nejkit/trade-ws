// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: bps_errors.proto

package balances

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BpsErrorCode int32

const (
	BpsErrorCode_BPS_ERROR_CODE_INTERNAL                     BpsErrorCode = 0
	BpsErrorCode_BPS_ERROR_CODE_NOT_EXISTS_ASSET             BpsErrorCode = 1
	BpsErrorCode_BPS_ERROR_CODE_NOT_ENOUGH_BALANCE           BpsErrorCode = 2
	BpsErrorCode_BPS_ERROR_CODE_ASSET_NOT_RELATED_TO_ACCOUNT BpsErrorCode = 3
	BpsErrorCode_BPS_ERROR_CODE_NOT_EXISTS_CURRENCY          BpsErrorCode = 4
)

// Enum value maps for BpsErrorCode.
var (
	BpsErrorCode_name = map[int32]string{
		0: "BPS_ERROR_CODE_INTERNAL",
		1: "BPS_ERROR_CODE_NOT_EXISTS_ASSET",
		2: "BPS_ERROR_CODE_NOT_ENOUGH_BALANCE",
		3: "BPS_ERROR_CODE_ASSET_NOT_RELATED_TO_ACCOUNT",
		4: "BPS_ERROR_CODE_NOT_EXISTS_CURRENCY",
	}
	BpsErrorCode_value = map[string]int32{
		"BPS_ERROR_CODE_INTERNAL":                     0,
		"BPS_ERROR_CODE_NOT_EXISTS_ASSET":             1,
		"BPS_ERROR_CODE_NOT_ENOUGH_BALANCE":           2,
		"BPS_ERROR_CODE_ASSET_NOT_RELATED_TO_ACCOUNT": 3,
		"BPS_ERROR_CODE_NOT_EXISTS_CURRENCY":          4,
	}
)

func (x BpsErrorCode) Enum() *BpsErrorCode {
	p := new(BpsErrorCode)
	*p = x
	return p
}

func (x BpsErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BpsErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_bps_errors_proto_enumTypes[0].Descriptor()
}

func (BpsErrorCode) Type() protoreflect.EnumType {
	return &file_bps_errors_proto_enumTypes[0]
}

func (x BpsErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BpsErrorCode.Descriptor instead.
func (BpsErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_bps_errors_proto_rawDescGZIP(), []int{0}
}

type BpsError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode BpsErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=BPS.BpsErrorCode" json:"error_code,omitempty"`
	Message   string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BpsError) Reset() {
	*x = BpsError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bps_errors_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BpsError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BpsError) ProtoMessage() {}

func (x *BpsError) ProtoReflect() protoreflect.Message {
	mi := &file_bps_errors_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BpsError.ProtoReflect.Descriptor instead.
func (*BpsError) Descriptor() ([]byte, []int) {
	return file_bps_errors_proto_rawDescGZIP(), []int{0}
}

func (x *BpsError) GetErrorCode() BpsErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return BpsErrorCode_BPS_ERROR_CODE_INTERNAL
}

func (x *BpsError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_bps_errors_proto protoreflect.FileDescriptor

var file_bps_errors_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x70, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x42, 0x50, 0x53, 0x22, 0x56, 0x0a, 0x08, 0x42, 0x70, 0x73, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x42, 0x50, 0x53, 0x2e, 0x42, 0x70,
	0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a,
	0xd0, 0x01, 0x0a, 0x0c, 0x42, 0x70, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x42, 0x50, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x23, 0x0a,
	0x1f, 0x42, 0x50, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x54,
	0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x42, 0x50, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f,
	0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x2f, 0x0a, 0x2b, 0x42, 0x50, 0x53,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x45,
	0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x4f,
	0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x42, 0x50,
	0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59,
	0x10, 0x04, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bps_errors_proto_rawDescOnce sync.Once
	file_bps_errors_proto_rawDescData = file_bps_errors_proto_rawDesc
)

func file_bps_errors_proto_rawDescGZIP() []byte {
	file_bps_errors_proto_rawDescOnce.Do(func() {
		file_bps_errors_proto_rawDescData = protoimpl.X.CompressGZIP(file_bps_errors_proto_rawDescData)
	})
	return file_bps_errors_proto_rawDescData
}

var file_bps_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bps_errors_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_bps_errors_proto_goTypes = []interface{}{
	(BpsErrorCode)(0), // 0: BPS.BpsErrorCode
	(*BpsError)(nil),  // 1: BPS.BpsError
}
var file_bps_errors_proto_depIdxs = []int32{
	0, // 0: BPS.BpsError.error_code:type_name -> BPS.BpsErrorCode
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_bps_errors_proto_init() }
func file_bps_errors_proto_init() {
	if File_bps_errors_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bps_errors_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BpsError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bps_errors_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bps_errors_proto_goTypes,
		DependencyIndexes: file_bps_errors_proto_depIdxs,
		EnumInfos:         file_bps_errors_proto_enumTypes,
		MessageInfos:      file_bps_errors_proto_msgTypes,
	}.Build()
	File_bps_errors_proto = out.File
	file_bps_errors_proto_rawDesc = nil
	file_bps_errors_proto_goTypes = nil
	file_bps_errors_proto_depIdxs = nil
}
